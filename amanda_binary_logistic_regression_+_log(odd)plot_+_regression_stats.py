# -*- coding: utf-8 -*-
"""Amanda - binary logistic regression + log(odd)plot + regression stats.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NoqoHrVer21gXh5gQM2zWNKdq_r9aQqG
"""

import numpy as np
import pandas as pd
import statsmodels.api as sm
import statsmodels.formula.api as smf
import seaborn as sns
import statsmodels.formula.api as smf

df = pd.read_csv("data/polling_site_data/clean_precincts_with_polling_site.csv")
df.head()

"""The following method of is adapted from: [(Python For Data Science, 2022)](https://pythonfordatascienceorg.wordpress.com/logistic-regression-python)

1. Producing the log(odd) linear plot 
"""

black = sns.regplot(x = df.iloc[:,12], y = df.iloc[:,16], data=df, logistic= True).set_title("Black: Log Odds Linear Graph")

"""2. Finding regression statistics of log(odd) plots"""

b = df.iloc[:,12]
poll = df.iloc[:,16]

model= smf.logit(formula="b~poll", data= df).fit()
model.summary()

"""3. Obtaining the odds ratio, z-value, and the 95% Confidence Interval """

model_odds = pd.DataFrame(np.exp(model.params), columns= ['OR'])
model_odds['z-value']= model.pvalues
model_odds[['2.5%', '97.5%']] = np.exp(model.conf_int())
model_odds

"""The procedures for log(odds) plot and obtaining its regression statistics is repeated for each racial group

1. Hispanics
"""

hispanics = sns.regplot(x = df.iloc[:,10], y = df.iloc[:,16], data=df, logistic= True).set_title("Hispanics: Log Odds Linear Graph")
h = df.iloc[:,10]
poll = df.iloc[:,16]
model= smf.logit(formula="h~poll", data= df).fit()
model.summary()

model_odds = pd.DataFrame(np.exp(model.params), columns= ['OR'])
model_odds['z-value']= model.pvalues
model_odds[['2.5%', '97.5%']] = np.exp(model.conf_int())
model_odds

"""2. White"""

white = sns.regplot(x = df.iloc[:,11], y = df.iloc[:,16], data=df, logistic= True).set_title("White: Log Odds Linear Graph")
w = df.iloc[:,11]
poll = df.iloc[:,16]
model= smf.logit(formula="w~poll", data= df).fit()
model.summary()

model_odds = pd.DataFrame(np.exp(model.params), columns= ['OR'])
model_odds['z-value']= model.pvalues
model_odds[['2.5%', '97.5%']] = np.exp(model.conf_int())
model_odds

"""3. Black"""

black = sns.regplot(x = df.iloc[:,12], y = df.iloc[:,16], data=df, logistic= True).set_title("Black: Log Odds Linear Graph")
b = df.iloc[:,12]
poll = df.iloc[:,16]
model= smf.logit(formula="b~poll", data= df).fit()
model.summary()

model_odds = pd.DataFrame(np.exp(model.params), columns= ['OR'])
model_odds['z-value']= model.pvalues
model_odds[['2.5%', '97.5%']] = np.exp(model.conf_int())
model_odds

"""4. Asian"""

asian = sns.regplot(x = df.iloc[:,13], y = df.iloc[:,16], data=df, logistic= True).set_title("Asian: Log Odds Linear Graph")
a = df.iloc[:,11]
poll = df.iloc[:,13]
model= smf.logit(formula="a~poll", data= df).fit()
model.summary()

model_odds = pd.DataFrame(np.exp(model.params), columns= ['OR'])
model_odds['z-value']= model.pvalues
model_odds[['2.5%', '97.5%']] = np.exp(model.conf_int())
model_odds

"""5. Mixed"""

mixed = sns.regplot(x = df.iloc[:,14], y = df.iloc[:,16], data=df, logistic= True).set_title("Mixed: Log Odds Linear Graph")
m = df.iloc[:,14]
poll = df.iloc[:,16]
model= smf.logit(formula="m~poll", data= df).fit()
model.summary()

model_odds = pd.DataFrame(np.exp(model.params), columns= ['OR'])
model_odds['z-value']= model.pvalues
model_odds[['2.5%', '97.5%']] = np.exp(model.conf_int())
model_odds

"""6. Other"""

other = sns.regplot(x = df.iloc[:,15], y = df.iloc[:,16], data=df, logistic= True).set_title("Other: Log Odds Linear Graph")
o = df.iloc[:,15]
poll = df.iloc[:,16]
model= smf.logit(formula="o~poll", data= df).fit()
model.summary()

model_odds = pd.DataFrame(np.exp(model.params), columns= ['OR'])
model_odds['z-value']= model.pvalues
model_odds[['2.5%', '97.5%']] = np.exp(model.conf_int())
model_odds